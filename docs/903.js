"use strict";(self.webpackChunkcomposite_component_library=self.webpackChunkcomposite_component_library||[]).push([[903],{72903:(n,e,t)=>{t.r(e),t.d(e,{default:()=>en});var o=t(96540),a=t(17186),l=t(64132),i=t(64467),r=t(80045),s=t(145),d=t(55794),m=t.n(d),c=t(46942),p=t.n(c);const f="BaseModal_baseModal__uJ2NV",u="BaseModal_modalHeader__e8GWQ",g="BaseModal_title__Ayalc",h="BaseModal_modalContent__GzcGi",x="BaseModal_modalFooter__qvQpD";var b=t(74848);const y=["width","size","title","open","confirmLoading","onCancel","onOk","cancelText","okText","footer","className","children","disabled","okLoading"];function v(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,o)}return t}function C(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?v(Object(t),!0).forEach((function(e){(0,i.A)(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):v(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}const j=n=>{const{width:e,size:t="middle",title:a="",open:i=!1,confirmLoading:d=!1,onCancel:c,onOk:v,cancelText:j="取消",okText:k="保存",footer:S,className:M="",children:O=null,disabled:R=!1,okLoading:N=!1}=n,P=(0,r.A)(n,y),[I,w]=(0,o.useState)(!0),[B,A]=(0,o.useState)({left:0,right:0,top:0,bottom:0}),D=(0,o.useRef)(null),F=(n,e)=>{const{clientWidth:t,clientHeight:o}=window.document.documentElement;if(D.current){const{left:n,right:a,top:l,bottom:i}=D.current.getBoundingClientRect();A({left:-n+e.x,right:t-(a-e.x),top:-l+e.y,bottom:o-(i-e.y)})}},$=(0,o.useMemo)((()=>e||("large"===t?1220:"small"===t?600:1080)),[e,t]);return(0,b.jsxs)(s.A,C(C({maskClosable:!1},P),{},{className:p()({[f]:!0,[M]:!!M}),open:i,width:$,confirmLoading:d,onCancel:c,footer:null,modalRender:n=>(0,b.jsx)(m(),{disabled:I,bounds:B,nodeRef:D,onStart:F,children:(0,b.jsx)("div",{ref:D,children:n})}),children:[(0,b.jsx)("div",{className:u,onMouseEnter:()=>{I&&w(!1)},onMouseLeave:()=>{w(!0)},children:(0,b.jsx)("div",{className:g,children:a})}),(0,b.jsx)("div",{className:h,children:O}),null!==S&&(0,b.jsx)("div",{className:x,children:S||(0,b.jsxs)(b.Fragment,{children:[(0,b.jsx)(l.Ay,{onClick:c,children:j}),!R&&v&&(0,b.jsx)(l.Ay,{type:"primary",loading:N,onClick:v,children:k})]})})]}))},k=n=>{const{open:e,onCancel:t}=n;return(0,b.jsx)(j,{size:"small",title:"提示",open:e,onCancel:t,footer:(0,b.jsx)(l.Ay,{type:"primary",onClick:t,children:"知道了"}),children:(0,b.jsx)("div",{style:{padding:"12px 10px"},children:"提示：XXXXXXXXXXXXXXXXXXXX"})})},S=n=>{const{open:e,onCancel:t}=n,[a,i]=(0,o.useState)(!1);return(0,b.jsxs)(j,{title:"普通弹框",open:e,onCancel:t,okText:"提交",onOk:()=>{},children:[(0,b.jsx)("div",{style:{width:"100%",height:"400px",display:"flex",justifyContent:"center",alignItems:"center"},children:(0,b.jsx)(l.Ay,{type:"primary",onClick:()=>i(!0),children:"弹框中再弹框"})}),(0,b.jsx)(k,{open:a,onCancel:()=>i(!1)})]})},M=()=>{const[n,e]=(0,o.useState)(!1),[t,a]=(0,o.useState)(!1);return(0,b.jsxs)("div",{style:{display:"flex",alignItems:"center"},children:[(0,b.jsx)(l.Ay,{type:"primary",style:{marginRight:"8px"},onClick:()=>e(!0),children:"普通弹框"}),(0,b.jsx)(l.Ay,{type:"primary",onClick:()=>a(!0),children:"提示文字弹框"}),(0,b.jsx)(S,{open:n,onCancel:()=>e(!1)}),(0,b.jsx)(k,{open:t,onCancel:()=>a(!1)})]})},O=[{fileName:"index.tsx",code:'import React, { useState } from "react";\nimport { Button } from "antd";\nimport Modal1 from "./Modal1";\nimport Modal2 from "./Modal2";\n\nconst Content = () => {\n  const [modal1Open, setModal1Open] = useState<boolean>(false);\n  const [modal2Open, setModal2Open] = useState<boolean>(false);\n\n  return (\n    <div style={{ display: "flex", alignItems: "center" }}>\n      <Button\n        type=\'primary\'\n        style={{ marginRight: "8px" }}\n        onClick={() => setModal1Open(true)}\n      >\n        普通弹框\n      </Button>\n      <Button type=\'primary\' onClick={() => setModal2Open(true)}>\n        提示文字弹框\n      </Button>\n      <Modal1 open={modal1Open} onCancel={() => setModal1Open(false)} />\n      <Modal2 open={modal2Open} onCancel={() => setModal2Open(false)} />\n    </div>\n  );\n};\n\nexport default Content;'},{fileName:"Modal1.tsx",code:'import React, { useState } from "react";\nimport { Button } from "antd";\nimport BaseModal from "@/components/BaseModal";\nimport Modal2 from "./Modal2";\n\ntype Modal1Props = { open?: boolean; onCancel: () => void };\n\nconst Modal1 = (props: Modal1Props) => {\n  const { open, onCancel } = props;\n  const [modal2Open, setModal2Open] = useState<boolean>(false);\n\n  return (\n    <BaseModal\n      title=\'普通弹框\'\n      open={open}\n      onCancel={onCancel}\n      okText=\'提交\'\n      onOk={() => {}}\n    >\n      <div\n        style={{\n          width: "100%",\n          height: "400px",\n          display: "flex",\n          justifyContent: "center",\n          alignItems: "center",\n        }}\n      >\n        <Button type=\'primary\' onClick={() => setModal2Open(true)}>\n          弹框中再弹框\n        </Button>\n      </div>\n      <Modal2 open={modal2Open} onCancel={() => setModal2Open(false)} />\n    </BaseModal>\n  );\n};\n\nexport default Modal1;'},{fileName:"Modal2.tsx",code:'import React from "react";\nimport { Button } from "antd";\nimport BaseModal from "@/components/BaseModal";\n\ntype Modal2Props = { open?: boolean; onCancel: () => void };\n\nconst Modal2 = (props: Modal2Props) => {\n  const { open, onCancel } = props;\n  return (\n    <BaseModal\n      size=\'small\'\n      title=\'提示\'\n      open={open}\n      onCancel={onCancel}\n      footer={\n        <Button type=\'primary\' onClick={onCancel}>\n          知道了\n        </Button>\n      }\n    >\n      <div\n        style={{\n          padding: "12px 10px",\n        }}\n      >\n        提示：XXXXXXXXXXXXXXXXXXXX\n      </div>\n    </BaseModal>\n  );\n};\n\nexport default Modal2;'}].concat([{fileName:"BaseModal.tsx",code:'/**\n * 可进行拖拽的公共弹框组件\n */\nimport React, { useState, useMemo, useRef, ReactNode } from "react";\nimport { Modal, Button, ModalProps } from "antd";\nimport Draggable from "react-draggable";\nimport type { DraggableData, DraggableEvent } from "react-draggable";\nimport classnams from "classnames";\nimport styles from "./index.module.scss";\n\ninterface BaseModalProps extends ModalProps {\n  width?: number; // 弹框的宽度\n  size?: "small" | "middle" | "large"; // 弹框的尺寸，分为大中小三个宽度，默认为middle，有传width则按照width来显示宽度\n  title?: ReactNode; // 弹框的顶部标题\n  open?: boolean; // 弹框是否显示\n  confirmLoading?: boolean; // 弹框是否为loading状态\n  onCancel: () => void;\n  onOk?: () => void;\n  cancelText?: string;\n  okText?: string;\n  footer?: ReactNode | null;\n  className?: string;\n  children?: ReactNode;\n  disabled?: boolean;\n  okLoading?: boolean; // 保存按钮是否为loading状态\n}\n\nconst BaseModal = (props: BaseModalProps) => {\n  const {\n    width,\n    size = "middle",\n    title = "",\n    open = false,\n    confirmLoading = false,\n    onCancel,\n    onOk,\n    cancelText = "取消",\n    okText = "保存",\n    footer,\n    className = "",\n    children = null,\n    disabled = false,\n    okLoading = false,\n    ...restPorps\n  } = props;\n  const [draggableDisabled, setDraggableDisabled] = useState<boolean>(true);\n  const [bounds, setBounds] = useState<{\n    left: number;\n    right: number;\n    top: number;\n    bottom: number;\n  }>({ left: 0, right: 0, top: 0, bottom: 0 });\n  const draggleRef = useRef<HTMLDivElement>(null);\n\n  const onDragStart = (_: DraggableEvent, uiData: DraggableData) => {\n    const { clientWidth, clientHeight } = window.document.documentElement;\n    if (draggleRef.current) {\n      const { left, right, top, bottom } =\n        draggleRef.current.getBoundingClientRect();\n      setBounds({\n        left: -left + uiData.x, // 当拖动边界的左边有距离时，只需加上那个距离就行了\n        right: clientWidth - (right - uiData.x), // 当拖动边界的左边有距离时，只需加上那个距离就行了\n        top: -top + uiData.y, // 当拖动边界的上边有距离时，只需加上那个距离就行了\n        bottom: clientHeight - (bottom - uiData.y), // 当拖动边界的上边有距离时，只需加上那个距离就行了\n      });\n    }\n  };\n\n  const finalWidth = useMemo(() => {\n    if (width) return width;\n    return size === "large" ? 1220 : size === "small" ? 600 : 1080;\n  }, [width, size]);\n\n  return (\n    <Modal\n      maskClosable={false}\n      {...restPorps}\n      className={classnams({\n        [styles.baseModal]: true,\n        [className]: !!className,\n      })}\n      open={open}\n      width={finalWidth}\n      confirmLoading={confirmLoading}\n      onCancel={onCancel}\n      footer={null}\n      modalRender={(modal) => (\n        <Draggable\n          disabled={draggableDisabled}\n          bounds={bounds}\n          nodeRef={draggleRef}\n          onStart={onDragStart}\n        >\n          <div ref={draggleRef}>{modal}</div>\n        </Draggable>\n      )}\n    >\n      <div\n        className={styles.modalHeader}\n        onMouseEnter={() => {\n          if (draggableDisabled) {\n            setDraggableDisabled(false);\n          }\n        }}\n        onMouseLeave={() => {\n          setDraggableDisabled(true);\n        }}\n      >\n        <div className={styles.title}>{title}</div>\n      </div>\n      <div className={styles.modalContent}>{children}</div>\n      {footer !== null && (\n        <div className={styles.modalFooter}>\n          {footer || (\n            <>\n              <Button onClick={onCancel}>{cancelText}</Button>\n              {!disabled && onOk && (\n                <Button type=\'primary\' loading={okLoading} onClick={onOk}>\n                  {okText}\n                </Button>\n              )}\n            </>\n          )}\n        </div>\n      )}\n    </Modal>\n  );\n};\n\nexport default BaseModal;'},{fileName:"BaseModal.module.scss",code:"$fontSize: 14px;\n.baseModal {\n  $leftRightPadding: 10px;\n\n  :global {\n    .ant-modal-content {\n      padding: 0 !important;\n      overflow: hidden;\n      .ant-modal-close {\n        top: 6px;\n        right: $leftRightPadding;\n        width: 20px !important;\n        height: 20px !important;\n        svg {\n          width: 14px;\n          height: 14px;\n        }\n      }\n    }\n  }\n\n  $headerHeight: 34px;\n  $footerHeight: 36px;\n  $border: 1px solid rgb(229, 230, 235);\n  .modalHeader {\n    box-sizing: border-box;\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: $headerHeight;\n    padding: 0px $leftRightPadding;\n    border-bottom: $border;\n    cursor: move;\n\n    .title {\n      color: #000000d8;\n      font-size: $fontSize;\n      font-weight: 600;\n    }\n  }\n\n  .modalContent {\n    box-sizing: border-box;\n    font-size: $fontSize;\n    width: 100%;\n    min-height: 40px;\n    max-height: calc(86vh - $headerHeight - $footerHeight);\n    overflow-y: auto;\n    overflow-x: hidden;\n  }\n\n  .modalFooter {\n    box-sizing: border-box;\n    width: 100%;\n    height: $footerHeight;\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    padding: 0px $leftRightPadding;\n    border-top: $border;\n\n    button {\n      height: 26px;\n      display: inline-flex;\n      align-items: center;\n      font-size: $fontSize;\n      &:not(:last-child) {\n        margin-right: 12px;\n      }\n    }\n  }\n}"}]),R=()=>(0,b.jsx)(a.A,{title:"可进行拖拽的公共弹框组件",codeParams:O,children:(0,b.jsx)(M,{})});var N=t(81935),P=t(1004),I=t(555),w=t(3550),B=t(7142),A=t(50770),D=t(91196),F=t(36492),$=t(14103),X=t(83853);const z="SearchForm_searchForm__3fwmb",_="SearchForm_rightBox__+qR6i",T="SearchForm_actionButtons__7xja0",L="SearchForm_expandAll__wtRDa";function E(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,o)}return t}function H(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?E(Object(t),!0).forEach((function(e){(0,i.A)(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):E(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}const{RangePicker:G}=P.A,V=(0,o.forwardRef)(((n,e)=>{const{formItemList:t,initialValues:a={},expandMinNum:i=8,actionButtonsAfter:r=null,onSearch:s,onReset:d,onExport:m,loading:c=!1,exportLoading:f=!1,handleExpandAll:u,className:g=""}=n,[h]=I.A.useForm(),[x,y]=(0,o.useState)(!1);(0,o.useImperativeHandle)(e,(()=>h));return(0,b.jsxs)("div",{className:p()({[z]:!0,[g]:!!g}),children:[(0,b.jsx)(I.A,{colon:!1,labelAlign:"left",form:h,layout:"inline",autoComplete:"off",initialValues:a,children:t.map(((n,e)=>{const{label:t,name:o,fieldType:a="Input",componentProps:l,component:r}=n;return r?(0,b.jsx)(I.A.Item,{label:t,name:o,className:(null==l?void 0:l.formItemClass)||"",valuePropName:(null==l?void 0:l.valuePropName)||"value",hidden:e>i-1&&!x,children:r},o):(0,b.jsxs)(I.A.Item,{label:t,name:o,className:(null==l?void 0:l.formItemClass)||"",hidden:e>i-1&&!x,children:["Input"===a&&(0,b.jsx)(w.A,H({},l)),"InputNumber"===a&&(0,b.jsx)(B.A,H({},l)),"RadioGroup"===a&&(0,b.jsx)(A.Ay.Group,H({},l)),"CheckboxGroup"===a&&(0,b.jsx)(D.A.Group,H({},l)),"DatePicker"===a&&(0,b.jsx)(P.A,H({},l)),"RangePicker"===a&&(0,b.jsx)(G,H({},l)),"Select"===a&&(0,b.jsx)(F.A,H({allowClear:!0},l))]},o)}))}),(0,b.jsxs)("div",{className:_,children:[(0,b.jsxs)("div",{className:T,children:[(0,b.jsx)(l.Ay,{type:"primary",loading:c,onClick:async()=>{const n=await(null==h?void 0:h.getFieldsValue());s(n)},children:"查询"}),(0,b.jsx)(l.Ay,{loading:c,onClick:d,children:"重置"}),m&&(0,b.jsx)(l.Ay,{loading:f,onClick:m,children:"导出"}),r]}),(null==t?void 0:t.length)>i&&(0,b.jsx)("div",{className:L,onClick:()=>{y(!x),null==u||u(!x)},children:x?(0,b.jsxs)(b.Fragment,{children:[(0,b.jsx)("span",{children:"收起"}),(0,b.jsx)(X.A,{})]}):(0,b.jsxs)(b.Fragment,{children:[(0,b.jsx)("span",{children:"展开"}),(0,b.jsx)($.A,{})]})})]})]})})),W=[{fileName:"SearchForm.tsx",code:'/**\n * 根据配置数据自动生成的搜索表单组件\n */\nimport React, {\n  useState,\n  ReactNode,\n  forwardRef,\n  useImperativeHandle,\n  Ref,\n} from "react";\nimport {\n  Form,\n  Input,\n  InputNumber,\n  Radio,\n  Checkbox,\n  DatePicker,\n  Select,\n  Button,\n} from "antd";\nimport { FormInstance } from "antd/lib";\nimport { DownOutlined, UpOutlined } from "@ant-design/icons";\nimport classnams from "classnames";\nimport styles from "./index.module.scss";\n\nconst { RangePicker } = DatePicker;\n\nexport type FieldType =\n  | "Input"\n  | "InputNumber"\n  | "RadioGroup"\n  | "CheckboxGroup"\n  | "DatePicker"\n  | "RangePicker"\n  | "Select";\n\nexport interface FormItemOption {\n  label: string; // 字段名称\n  name: string; // 字段\n  fieldType?: FieldType; // 字段使用的组件类型, 默认为"Input"，如果有component，优先使用component\n  defaultValue?: any; // 字段初始值\n  componentProps?: Record<string, any>; // 传给的组件的参数\n  component?: ReactNode; // 使用自定义组件\n}\n\ninterface SearchFormProps {\n  formItemList: FormItemOption[]; // 配置数据\n  initialValues?: Record<string, any>; // 表单初始数据\n  expandMinNum?: number; // 超过多少个后显示展开/收起按钮，默认为8\n  actionButtonsAfter?: ReactNode; // 追加在操作按钮后面的元素\n  onSearch: (formValues: Record<string, any>) => void; // 点击搜索的回调\n  onReset: () => void; // 点击重置的回调\n  onExport?: () => void; // 点击导出的回调\n  loading?: boolean; // 是否正在请求数据\n  exportLoading?: boolean; // 导出是否正在loading\n  handleExpandAll?: (expandAll: boolean) => void; // 展开/收起状态改变后的回调\n  className?: string; // 当label的长度大于默认的固定长度时，可以使用该参数进行样式覆盖\n}\n\nconst SearchForm = forwardRef<FormInstance | null, SearchFormProps>(\n  (props: SearchFormProps, ref: Ref<FormInstance | null>) => {\n    const {\n      formItemList,\n      initialValues = {},\n      expandMinNum = 8,\n      actionButtonsAfter = null,\n      onSearch,\n      onReset,\n      onExport,\n      loading = false,\n      exportLoading = false,\n      handleExpandAll,\n      className = "",\n    } = props;\n    const [form] = Form.useForm();\n    const [expandAll, setExpandAll] = useState<boolean>(false);\n\n    useImperativeHandle(ref, () => form);\n\n    const onExpandAllClick = () => {\n      setExpandAll(!expandAll);\n      handleExpandAll?.(!expandAll);\n    };\n\n    const handleSearch = async () => {\n      const formValues = await form?.getFieldsValue();\n      onSearch(formValues);\n    };\n\n    return (\n      <div\n        className={classnams({\n          [styles.searchForm]: true,\n          [className]: !!className,\n        })}\n      >\n        <Form\n          colon={false}\n          labelAlign=\'left\'\n          form={form}\n          layout=\'inline\'\n          autoComplete=\'off\'\n          initialValues={initialValues}\n        >\n          {formItemList.map((formItemOption: FormItemOption, index: number) => {\n            const {\n              label,\n              name,\n              fieldType = "Input",\n              componentProps,\n              component,\n            } = formItemOption;\n            if (component) {\n              return (\n                <Form.Item\n                  label={label}\n                  name={name}\n                  key={name}\n                  className={componentProps?.formItemClass || ""}\n                  valuePropName={componentProps?.valuePropName || "value"}\n                  hidden={index > expandMinNum - 1 && !expandAll}\n                >\n                  {component}\n                </Form.Item>\n              );\n            }\n\n            return (\n              <Form.Item\n                label={label}\n                name={name}\n                key={name}\n                className={componentProps?.formItemClass || ""}\n                hidden={index > expandMinNum - 1 && !expandAll}\n              >\n                {fieldType === "Input" && <Input {...componentProps} />}\n                {fieldType === "InputNumber" && (\n                  <InputNumber {...componentProps} />\n                )}\n                {fieldType === "RadioGroup" && (\n                  <Radio.Group {...componentProps} />\n                )}\n                {fieldType === "CheckboxGroup" && (\n                  <Checkbox.Group {...componentProps} />\n                )}\n                {fieldType === "DatePicker" && (\n                  <DatePicker {...componentProps} />\n                )}\n                {fieldType === "RangePicker" && (\n                  <RangePicker {...componentProps} />\n                )}\n                {fieldType === "Select" && (\n                  <Select allowClear {...componentProps} />\n                )}\n              </Form.Item>\n            );\n          })}\n        </Form>\n        <div className={styles.rightBox}>\n          <div className={styles.actionButtons}>\n            <Button type=\'primary\' loading={loading} onClick={handleSearch}>\n              查询\n            </Button>\n            <Button loading={loading} onClick={onReset}>\n              重置\n            </Button>\n            {onExport && (\n              <Button loading={exportLoading} onClick={onExport}>\n                导出\n              </Button>\n            )}\n            {actionButtonsAfter}\n          </div>\n          {formItemList?.length > expandMinNum && (\n            <div className={styles.expandAll} onClick={onExpandAllClick}>\n              {!expandAll ? (\n                <>\n                  <span>展开</span>\n                  <DownOutlined />\n                </>\n              ) : (\n                <>\n                  <span>收起</span>\n                  <UpOutlined />\n                </>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default SearchForm;'},{fileName:"SearchForm.module.scss",code:".searchForm {\n  $fontSize: 14px;\n  $formItemLabelWidth: 86px;\n  $formItemComponentWidth: 230px;\n  $formItemComponentHeight: 32px;\n  $formItemMarginBottom: 10px;\n\n  display: flex;\n  justify-content: space-between;\n  .rightBox {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n    .actionButtons {\n      display: flex;\n      align-items: center;\n\n      :global {\n        button {\n          display: inline-flex;\n          height: $formItemComponentHeight !important;\n          align-items: center;\n          justify-content: center;\n          margin-left: 8px;\n        }\n      }\n    }\n    .expandAll {\n      display: inline-flex !important;\n      height: 32px;\n      margin-top: 8px;\n      color: #1677ff;\n      align-items: center;\n      font-size: 14px;\n      cursor: pointer;\n\n      svg {\n        padding-left: 4px;\n        margin-right: 4px;\n      }\n    }\n  }\n\n  :global {\n    .ant-form-item {\n      margin-bottom: $formItemMarginBottom !important;\n      .ant-form-item-label {\n        min-width: $formItemLabelWidth;\n        width: $formItemLabelWidth;\n        label {\n          height: $formItemComponentHeight !important;\n          font-size: $fontSize !important;\n        }\n      }\n      .ant-form-item-control-input {\n        min-width: $formItemComponentWidth;\n        min-height: $formItemComponentHeight !important;\n        .ant-input:not(textarea),\n        .ant-input-number,\n        .ant-select,\n        .ant-picker {\n          width: $formItemComponentWidth;\n          height: $formItemComponentHeight !important;\n          font-size: $fontSize !important;\n        }\n        .ant-input-affix-wrapper {\n          box-sizing: border-box;\n          height: $formItemComponentHeight !important;\n          line-height: $formItemComponentHeight !important;\n          // padding: 0px 11px !important;\n          .ant-input {\n            height: calc($formItemComponentHeight - 2px) !important;\n          }\n        }\n        textarea.ant-input {\n          width: $formItemComponentWidth;\n          font-size: $fontSize !important;\n          min-height: $formItemComponentHeight !important;\n          // padding: 2px 11px;\n        }\n        // .ant-input-number {\n        //   .ant-input-number-input {\n        //     padding: 2px 7px;\n        //   }\n        // }\n        .ant-select {\n          .ant-select-selector {\n            font-size: $fontSize !important;\n            .ant-select-selection-placeholder {\n              font-size: $fontSize !important;\n            }\n            .ant-select-selection-search {\n              margin: auto;\n              .ant-select-selection-search-input {\n                font-size: $fontSize !important;\n                height: 100%;\n              }\n            }\n          }\n        }\n        // .ant-select-multiple{\n        //   .ant-select-selection-item{\n        //     height: 18px;\n        //     line-height: 16px;\n        //   }\n        // }\n        .ant-picker {\n          .ant-picker-input {\n            font-size: $fontSize !important;\n            input {\n              font-size: $fontSize !important;\n            }\n          }\n        }\n      }\n    }\n  }\n}"}];var J=t(87115),K=t(85541);const q=()=>{const n=(0,o.useRef)(null),[e,t]=(0,o.useState)([]),[a,l]=(0,o.useState)(!1),i=[{label:"字段1",name:"field1"},{label:"字段2",name:"field2",fieldType:"InputNumber"},{label:"字段3",name:"field3",fieldType:"RadioGroup",componentProps:{options:[{label:"是",value:"1"},{label:"否",value:"0"}]}},{label:"字段4",name:"field4",fieldType:"CheckboxGroup",componentProps:{options:[{label:"是",value:"1"},{label:"否",value:"0"}]}},{label:"字段5",name:"field5",fieldType:"DatePicker"},{label:"字段6",name:"field6",fieldType:"RangePicker"},{label:"字段7",name:"field7",fieldType:"Select",componentProps:{options:[{label:"是",value:"1"},{label:"否",value:"0"}]}},{label:"自定义组件1",name:"field8",component:(0,b.jsx)(J.A,{options:e,loading:a,fieldNames:{label:"name",value:"code"},searchKeys:["name"]})},{label:"自定义组件2",name:"field9",component:(0,b.jsx)(J.A,{options:e,loading:a,fieldNames:{label:"name",value:"code"},searchKeys:["name"]})}],r=n=>{N.Ay.warning("发起请求，请求参数为：".concat(n?JSON.stringify(n):""))},s=(0,o.useCallback)((n=>{r(n)}),[]),d=(0,o.useCallback)((()=>{var e;null===(e=n.current)||void 0===e||e.resetFields(),r({})}),[]);return(0,o.useEffect)((()=>{(async()=>{l(!0);const n=await(0,K.AJ)();l(!1),t(n?n.data:[])})()}),[]),(0,b.jsx)(V,{formItemList:i,onSearch:s,onReset:d,ref:n})},Q=[{fileName:"index.tsx",code:'import React, { useState, useRef, useCallback, useEffect } from "react";\nimport { FormInstance, message } from "antd";\nimport SearchForm from "components/SearchForm";\nimport type { FormItemOption } from "components/SearchForm";\nimport CustomMultiSelect from "@/components/formItems/CustomMultiSelect";\nimport { requestMockData } from "utils/util";\n\nconst Content = () => {\n  const formRef = useRef<FormInstance | null>(null);\n  const [options, setOptions] = useState<Record<string, any>[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const getOptions = async () => {\n    setLoading(true);\n    const res = await requestMockData();\n    setLoading(false);\n    if (res) {\n      setOptions(res.data);\n    } else {\n      setOptions([]);\n    }\n  };\n\n  const formItemList: FormItemOption[] = [\n    {\n      label: "字段1",\n      name: "field1",\n    },\n    {\n      label: "字段2",\n      name: "field2",\n      fieldType: "InputNumber",\n    },\n    {\n      label: "字段3",\n      name: "field3",\n      fieldType: "RadioGroup",\n      componentProps: {\n        options: [\n          { label: "是", value: "1" },\n          { label: "否", value: "0" },\n        ],\n      },\n    },\n    {\n      label: "字段4",\n      name: "field4",\n      fieldType: "CheckboxGroup",\n      componentProps: {\n        options: [\n          { label: "是", value: "1" },\n          { label: "否", value: "0" },\n        ],\n      },\n    },\n    {\n      label: "字段5",\n      name: "field5",\n      fieldType: "DatePicker",\n    },\n    {\n      label: "字段6",\n      name: "field6",\n      fieldType: "RangePicker",\n    },\n    {\n      label: "字段7",\n      name: "field7",\n      fieldType: "Select",\n      componentProps: {\n        options: [\n          { label: "是", value: "1" },\n          { label: "否", value: "0" },\n        ],\n      },\n    },\n    {\n      label: "自定义组件1",\n      name: "field8",\n      component: (\n        <CustomMultiSelect\n          options={options}\n          loading={loading}\n          fieldNames={{ label: "name", value: "code" }}\n          searchKeys={["name"]}\n        />\n      ),\n    },\n    {\n      label: "自定义组件2",\n      name: "field9",\n      component: (\n        <CustomMultiSelect\n          options={options}\n          loading={loading}\n          fieldNames={{ label: "name", value: "code" }}\n          searchKeys={["name"]}\n        />\n      ),\n    },\n  ];\n\n  const fetchData = (params: Record<string, any>) => {\n    message.warning(\n      `发起请求，请求参数为：${params ? JSON.stringify(params) : ""}`\n    );\n  };\n\n  const onSearch = useCallback((formValues: Record<string, any>) => {\n    fetchData(formValues);\n  }, []);\n\n  const onReset = useCallback(() => {\n    formRef.current?.resetFields();\n    fetchData({});\n  }, []);\n\n\n  useEffect(() => {\n    getOptions();\n  }, []);\n\n  return (\n    <SearchForm\n      formItemList={formItemList}\n      onSearch={onSearch}\n      onReset={onReset}\n      ref={formRef}\n    />\n  );\n};\n\nexport default Content;'}].concat(W),U=()=>(0,b.jsx)(a.A,{title:"根据配置数据自动生成的搜索表单组件",codeParams:Q,children:(0,b.jsx)(q,{})}),Y="others_container__QO6GC",Z="others_sample__WyKIJ",nn=[(0,b.jsx)(R,{}),(0,b.jsx)(U,{})],en=()=>(0,b.jsx)("div",{className:Y,children:nn.map(((n,e)=>(0,b.jsx)("div",{className:Z,children:n},e)))})}}]);