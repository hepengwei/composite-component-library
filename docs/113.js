"use strict";(self.webpackChunkcomposite_component_library=self.webpackChunkcomposite_component_library||[]).push([[113],{65113:(e,n,t)=>{t.d(n,{A:()=>f,w:()=>b});var s=t(64467),u=t(96540),r=t(7142),a=t(36492),l=t(92989);const o="InputNumberAndSelect_container__CNgTj",i="InputNumberAndSelect_inputNumber__lCGzM",c="InputNumberAndSelect_select__BQZYg";var d=t(74848);function p(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);n&&(s=s.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,s)}return t}function m(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?p(Object(t),!0).forEach((function(n){(0,s.A)(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}const f=(0,u.forwardRef)(((e,n)=>{const{value:t,options:s=[],disabled:p,inputNumberProps:f={},selectProps:b={},onChange:v,"aria-invalid":g,setInputNumberStatus:S,setSelectStatus:y,style:N={}}=e,h=(0,l.A)(p),I=(0,u.useRef)(null);(0,u.useImperativeHandle)(n,(()=>({focus:()=>{var e;null===(e=I.current)||void 0===e||e.focus()}})));const w=(0,u.useMemo)((()=>{if(S&&"true"===g)return S(t)}),[g,t]),C=(0,u.useMemo)((()=>{if(y&&"true"===g)return y(t)}),[g,t]);return(0,d.jsxs)("div",{className:o,style:N,children:[(0,d.jsx)(r.A,m(m({className:i,value:t&&t.length>=1?t[0]:void 0,disabled:h,status:w},f),{},{onChange:e=>{const n=t&&t.length>=2?[e,t[1]]:[e,void 0];null==v||v(n)},ref:I})),(0,d.jsx)(a.A,m(m({className:c,value:t&&t.length>=2?t[1]:void 0,options:s,disabled:h,status:C},b),{},{onChange:(e,n)=>{const s=t&&t.length>=1?[t[0],e]:[void 0,e];null==v||v(s,n)}}))]})})),b=[{fileName:"InputNumberAndSelect.tsx",code:'/**\n * 左边数值输入框右边下拉框的复合组件\n */\nimport React, {\n  useMemo,\n  useImperativeHandle,\n  useRef,\n  forwardRef,\n  Ref,\n} from "react";\nimport { InputNumber, Select } from "antd";\nimport useFormDisabled from "hooks/useFormDisabled";\nimport styles from "./index.module.scss";\n\nexport type Value = [number | string | null | undefined, string | undefined];\ntype Status = "warning" | "error" | "" | undefined;\n\ntype InputNumberAndSelectProps = {\n  value?: Value;\n  options: Record<string, any>;\n  disabled?: boolean;\n  inputNumberProps?: Record<string, any>; // 传递给数值输入框的属性值\n  selectProps?: Record<string, any>; // 传递给下拉框的属性值\n  onChange?: (value: Value, option?: Record<string, any>) => void; // 如果修改下拉框则onChange的第二个参数会返回option\n  "aria-invalid"?: string; // Form校验时会自动传入"true"\n  setInputNumberStatus?: (value: Value | undefined) => Status; // 当form校验时，设置数值输入框的status属性值。当使用该属性时，要给外层的Form.Item设置validateStatus为\'\'\n  setSelectStatus?: (value: Value | undefined) => Status; // 当form校验时，设置下拉框的status属性值。当使用该属性时，要给外层的Form.Item设置validateStatus为\'\'\n  style?: Record<string, any>;\n};\n\nconst InputNumberAndSelect = forwardRef(\n  (props: InputNumberAndSelectProps, ref: Ref<{ focus: () => void }>) => {\n    const {\n      value,\n      options = [],\n      disabled: selfDisabled,\n      inputNumberProps = {},\n      selectProps = {},\n      onChange,\n      ["aria-invalid"]: invalid,\n      setInputNumberStatus,\n      setSelectStatus,\n      style = {},\n    } = props;\n    const disabled = useFormDisabled(selfDisabled);\n    const focusRef = useRef<any>(null);\n\n    useImperativeHandle(ref, () => ({\n      focus: () => {\n        focusRef.current?.focus();\n      },\n    }));\n\n    const onInputNumberChange = (v: number | string | null) => {\n      const newValue: Value =\n        value && value.length >= 2 ? [v, value[1]] : [v, undefined];\n      onChange?.(newValue);\n    };\n\n    const onSelectChange = (v: string, option: Record<string, any>) => {\n      const newValue: Value =\n        value && value.length >= 1 ? [value[0], v] : [undefined, v];\n      onChange?.(newValue, option);\n    };\n\n    const inputNumberStatus = useMemo(() => {\n      if (setInputNumberStatus && invalid === "true") {\n        return setInputNumberStatus(value);\n      }\n      return undefined;\n    }, [invalid, value]);\n\n    const selectStatus = useMemo(() => {\n      if (setSelectStatus && invalid === "true") {\n        return setSelectStatus(value);\n      }\n      return undefined;\n    }, [invalid, value]);\n\n    return (\n      <div className={styles.container} style={style}>\n        <InputNumber\n          className={styles.inputNumber}\n          value={value && value.length >= 1 ? value[0] : undefined}\n          disabled={disabled}\n          status={inputNumberStatus}\n          {...inputNumberProps}\n          onChange={onInputNumberChange}\n          ref={focusRef}\n        />\n        <Select\n          className={styles.select}\n          value={value && value.length >= 2 ? value[1] : undefined}\n          options={options as any[]}\n          disabled={disabled}\n          status={selectStatus}\n          {...selectProps}\n          onChange={onSelectChange}\n        />\n      </div>\n    );\n  }\n);\n\nexport default InputNumberAndSelect;'},{fileName:"InputNumberAndSelect.module.scss",code:".container {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  .inputNumber {\n    display: flex;\n    flex: 1;\n  }\n  .select {\n    display: flex;\n    flex: 1;\n    margin-left: 8px;\n  }\n}"}]}}]);