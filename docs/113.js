"use strict";(self.webpackChunkcomposite_component_library=self.webpackChunkcomposite_component_library||[]).push([[113],{65113:(e,n,t)=>{t.d(n,{A:()=>c,w:()=>p});var s=t(96540),u=t(7142),a=t(36492),l=t(92989);const r="InputNumberAndSelect_container__7s7iS",i="InputNumberAndSelect_inputNumber__Xbfyv",o="InputNumberAndSelect_select__hietx";var d=t(74848);const c=e=>{const{value:n,options:t=[],disabled:c,inputNumberProps:p={},selectProps:m={},onChange:v,"aria-invalid":b,setInputNumberStatus:S,setSelectStatus:g,style:f={}}=e,N=(0,l.A)(c),h=(0,s.useMemo)((()=>{if(S&&"true"===b)return S(n)}),[b,n]),y=(0,s.useMemo)((()=>{if(g&&"true"===b)return g(n)}),[b,n]);return(0,d.jsxs)("div",{className:r,style:f,children:[(0,d.jsx)(u.A,{className:i,value:n&&n.length>=1?n[0]:void 0,disabled:N,status:h,...p,onChange:e=>{const t=n&&n.length>=2?[e,n[1]]:[e,void 0];v?.(t)}}),(0,d.jsx)(a.A,{className:o,value:n&&n.length>=2?n[1]:void 0,options:t,disabled:N,status:y,...m,onChange:(e,t)=>{const s=n&&n.length>=1?[n[0],e]:[void 0,e];v?.(s,t)}})]})},p=[{fileName:"InputNumberAndSelect.tsx",code:'/**\n * 左边数值输入框右边下拉框的复合组件\n */\nimport React, { useMemo } from "react";\nimport { InputNumber, Select } from "antd";\nimport useFormDisabled from "hooks/useFormDisabled";\nimport styles from "./index.module.scss";\n\nexport type Value = [number | string | null | undefined, string | undefined];\ntype Status = "warning" | "error" | "" | undefined;\n\ntype InputNumberAndSelectProps = {\n  value?: Value;\n  options: Record<string, any>;\n  disabled?: boolean;\n  inputNumberProps?: Record<string, any>; // 传递给数值输入框的属性值\n  selectProps?: Record<string, any>; // 传递给下拉框的属性值\n  onChange?: (value: Value, option?: Record<string, any>) => void; // 如果修改下拉框则onChange的第二个参数会返回option\n  "aria-invalid"?: string; // Form校验时会自动传入"true"\n  setInputNumberStatus?: (value: Value | undefined) => Status; // 当form校验时，设置数值输入框的status属性值。当使用该属性时，要给外层的Form.Item设置validateStatus为\'\'\n  setSelectStatus?: (value: Value | undefined) => Status; // 当form校验时，设置下拉框的status属性值。当使用该属性时，要给外层的Form.Item设置validateStatus为\'\'\n  style?: Record<string, any>;\n};\n\nconst InputNumberAndSelect = (props: InputNumberAndSelectProps) => {\n  const {\n    value,\n    options = [],\n    disabled: selfDisabled,\n    inputNumberProps = {},\n    selectProps = {},\n    onChange,\n    ["aria-invalid"]: invalid,\n    setInputNumberStatus,\n    setSelectStatus,\n    style = {},\n  } = props;\n  const disabled = useFormDisabled(selfDisabled);\n\n  const onInputNumberChange = (v: number | string | null) => {\n    const newValue: Value =\n      value && value.length >= 2 ? [v, value[1]] : [v, undefined];\n    onChange?.(newValue);\n  };\n\n  const onSelectChange = (v: string, option: Record<string, any>) => {\n    const newValue: Value =\n      value && value.length >= 1 ? [value[0], v] : [undefined, v];\n    onChange?.(newValue, option);\n  };\n\n  const inputNumberStatus = useMemo(() => {\n    if (setInputNumberStatus && invalid === "true") {\n      return setInputNumberStatus(value);\n    }\n    return undefined;\n  }, [invalid, value]);\n\n  const selectStatus = useMemo(() => {\n    if (setSelectStatus && invalid === "true") {\n      return setSelectStatus(value);\n    }\n    return undefined;\n  }, [invalid, value]);\n\n  return (\n    <div className={styles.container} style={style}>\n      <InputNumber\n        className={styles.inputNumber}\n        value={value && value.length >= 1 ? value[0] : undefined}\n        disabled={disabled}\n        status={inputNumberStatus}\n        {...inputNumberProps}\n        onChange={onInputNumberChange}\n      />\n      <Select\n        className={styles.select}\n        value={value && value.length >= 2 ? value[1] : undefined}\n        options={options as any[]}\n        disabled={disabled}\n        status={selectStatus}\n        {...selectProps}\n        onChange={onSelectChange}\n      />\n    </div>\n  );\n};\n\nexport default InputNumberAndSelect;'},{fileName:"InputNumberAndSelect.module.scss",code:".container {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  .inputNumber {\n    display: flex;\n    flex: 1;\n  }\n  .select {\n    display: flex;\n    flex: 1;\n    margin-left: 8px;\n  }\n}"}]}}]);