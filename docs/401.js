"use strict";(self.webpackChunkcomposite_component_library=self.webpackChunkcomposite_component_library||[]).push([[401],{39401:(n,e,o)=>{o.r(e),o.d(e,{default:()=>j});var t=o(96540),a=o(17186),l=o(25202),i=o(145),s=o(55794),d=o.n(s),r=o(46942),c=o.n(r);const p="BaseModal_baseModal__NXTUe",m="BaseModal_modalHeader__qXt4s",g="BaseModal_title__MF42s",f="BaseModal_modalContent__LeTAW",u="BaseModal_modalFooter__cdjit";var h=o(74848);const x=n=>{const{width:e,size:o="middle",title:a="",open:s=!1,confirmLoading:r=!1,onCancel:x,onOk:b,cancelText:M="取消",okText:y="保存",footer:C,className:v="",children:X=null,disabled:B=!1,okLoading:k=!1,...j}=n,[R,w]=(0,t.useState)(!0),[N,D]=(0,t.useState)({left:0,right:0,top:0,bottom:0}),_=(0,t.useRef)(null),O=(n,e)=>{const{clientWidth:o,clientHeight:t}=window.document.documentElement;if(_.current){const{left:n,right:a,top:l,bottom:i}=_.current.getBoundingClientRect();D({left:-n+e.x,right:o-(a-e.x),top:-l+e.y,bottom:t-(i-e.y)})}},S=(0,t.useMemo)((()=>e||("large"===o?1220:"small"===o?600:1080)),[e,o]);return(0,h.jsxs)(i.A,{maskClosable:!1,...j,className:c()({[p]:!0,[v]:!!v}),open:s,width:S,confirmLoading:r,onCancel:x,footer:null,modalRender:n=>(0,h.jsx)(d(),{disabled:R,bounds:N,nodeRef:_,onStart:O,children:(0,h.jsx)("div",{ref:_,children:n})}),children:[(0,h.jsx)("div",{className:m,onMouseEnter:()=>{R&&w(!1)},onMouseLeave:()=>{w(!0)},children:(0,h.jsx)("div",{className:g,children:a})}),(0,h.jsx)("div",{className:f,children:X}),null!==C&&(0,h.jsx)("div",{className:u,children:C||(0,h.jsxs)(h.Fragment,{children:[(0,h.jsx)(l.Ay,{onClick:x,children:M}),!B&&b&&(0,h.jsx)(l.Ay,{type:"primary",loading:k,onClick:b,children:y})]})})]})},b=n=>{const{open:e,onCancel:o}=n;return(0,h.jsx)(x,{size:"small",title:"提示",open:e,onCancel:o,footer:(0,h.jsx)(l.Ay,{type:"primary",onClick:o,children:"知道了"}),children:(0,h.jsx)("div",{style:{padding:"12px 10px"},children:"提示：XXXXXXXXXXXXXXXXXXXX"})})},M=n=>{const{open:e,onCancel:o}=n,[a,i]=(0,t.useState)(!1);return(0,h.jsxs)(x,{title:"普通弹框",open:e,onCancel:o,okText:"提交",onOk:()=>{},children:[(0,h.jsx)("div",{style:{width:"100%",height:"400px",display:"flex",justifyContent:"center",alignItems:"center"},children:(0,h.jsx)(l.Ay,{type:"primary",onClick:()=>i(!0),children:"弹框中再弹框"})}),(0,h.jsx)(b,{open:a,onCancel:()=>i(!1)})]})},y=()=>{const[n,e]=(0,t.useState)(!1),[o,a]=(0,t.useState)(!1);return(0,h.jsxs)("div",{style:{display:"flex",alignItems:"center"},children:[(0,h.jsx)(l.Ay,{type:"primary",style:{marginRight:"8px"},onClick:()=>e(!0),children:"普通弹框"}),(0,h.jsx)(l.Ay,{type:"primary",onClick:()=>a(!0),children:"提示文字弹框"}),(0,h.jsx)(M,{open:n,onCancel:()=>e(!1)}),(0,h.jsx)(b,{open:o,onCancel:()=>a(!1)})]})},C=[{fileName:"index.tsx",code:'import React, { useState } from "react";\nimport { Button } from "antd";\nimport Modal1 from "./Modal1";\nimport Modal2 from "./Modal2";\n\nconst Content = () => {\n  const [modal1Open, setModal1Open] = useState<boolean>(false);\n  const [modal2Open, setModal2Open] = useState<boolean>(false);\n\n  return (\n    <div style={{ display: "flex", alignItems: "center" }}>\n      <Button\n        type=\'primary\'\n        style={{ marginRight: "8px" }}\n        onClick={() => setModal1Open(true)}\n      >\n        普通弹框\n      </Button>\n      <Button type=\'primary\' onClick={() => setModal2Open(true)}>\n        提示文字弹框\n      </Button>\n      <Modal1 open={modal1Open} onCancel={() => setModal1Open(false)} />\n      <Modal2 open={modal2Open} onCancel={() => setModal2Open(false)} />\n    </div>\n  );\n};\n\nexport default Content;'},{fileName:"Modal1.tsx",code:'import React, { useState } from "react";\nimport { Button } from "antd";\nimport BaseModal from "@/components/BaseModal";\nimport Modal2 from "./Modal2";\n\ntype Modal1Props = { open?: boolean; onCancel: () => void };\n\nconst Modal1 = (props: Modal1Props) => {\n  const { open, onCancel } = props;\n  const [modal2Open, setModal2Open] = useState<boolean>(false);\n\n  return (\n    <BaseModal\n      title=\'普通弹框\'\n      open={open}\n      onCancel={onCancel}\n      okText=\'提交\'\n      onOk={() => {}}\n    >\n      <div\n        style={{\n          width: "100%",\n          height: "400px",\n          display: "flex",\n          justifyContent: "center",\n          alignItems: "center",\n        }}\n      >\n        <Button type=\'primary\' onClick={() => setModal2Open(true)}>\n          弹框中再弹框\n        </Button>\n      </div>\n      <Modal2 open={modal2Open} onCancel={() => setModal2Open(false)} />\n    </BaseModal>\n  );\n};\n\nexport default Modal1;'},{fileName:"Modal2.tsx",code:'import React from "react";\nimport { Button } from "antd";\nimport BaseModal from "@/components/BaseModal";\n\ntype Modal2Props = { open?: boolean; onCancel: () => void };\n\nconst Modal2 = (props: Modal2Props) => {\n  const { open, onCancel } = props;\n  return (\n    <BaseModal\n      size=\'small\'\n      title=\'提示\'\n      open={open}\n      onCancel={onCancel}\n      footer={\n        <Button type=\'primary\' onClick={onCancel}>\n          知道了\n        </Button>\n      }\n    >\n      <div\n        style={{\n          padding: "12px 10px",\n        }}\n      >\n        提示：XXXXXXXXXXXXXXXXXXXX\n      </div>\n    </BaseModal>\n  );\n};\n\nexport default Modal2;'}].concat([{fileName:"BaseModal.tsx",code:'/**\n * 可进行拖拽的公共弹框组件\n */\nimport React, { useState, useMemo, useRef, ReactNode } from "react";\nimport { Modal, Button, ModalProps } from "antd";\nimport Draggable from "react-draggable";\nimport type { DraggableData, DraggableEvent } from "react-draggable";\nimport classnams from "classnames";\nimport styles from "./index.module.scss";\n\ninterface BaseModalProps extends ModalProps {\n  width?: number; // 弹框的宽度\n  size?: "small" | "middle" | "large"; // 弹框的尺寸，分为大中小三个宽度，默认为middle，有传width则按照width来显示宽度\n  title?: ReactNode; // 弹框的顶部标题\n  open?: boolean; // 弹框是否显示\n  confirmLoading?: boolean; // 弹框是否为loading状态\n  onCancel: () => void;\n  onOk?: () => void;\n  cancelText?: string;\n  okText?: string;\n  footer?: ReactNode | null;\n  className?: string;\n  children?: ReactNode;\n  disabled?: boolean;\n  okLoading?: boolean; // 保存按钮是否为loading状态\n}\n\nconst BaseModal = (props: BaseModalProps) => {\n  const {\n    width,\n    size = "middle",\n    title = "",\n    open = false,\n    confirmLoading = false,\n    onCancel,\n    onOk,\n    cancelText = "取消",\n    okText = "保存",\n    footer,\n    className = "",\n    children = null,\n    disabled = false,\n    okLoading = false,\n    ...restPorps\n  } = props;\n  const [draggableDisabled, setDraggableDisabled] = useState<boolean>(true);\n  const [bounds, setBounds] = useState<{\n    left: number;\n    right: number;\n    top: number;\n    bottom: number;\n  }>({ left: 0, right: 0, top: 0, bottom: 0 });\n  const draggleRef = useRef<HTMLDivElement>(null);\n\n  const onDragStart = (_: DraggableEvent, uiData: DraggableData) => {\n    const { clientWidth, clientHeight } = window.document.documentElement;\n    if (draggleRef.current) {\n      const { left, right, top, bottom } =\n        draggleRef.current.getBoundingClientRect();\n      setBounds({\n        left: -left + uiData.x, // 当拖动边界的左边有距离时，只需加上那个距离就行了\n        right: clientWidth - (right - uiData.x), // 当拖动边界的左边有距离时，只需加上那个距离就行了\n        top: -top + uiData.y, // 当拖动边界的上边有距离时，只需加上那个距离就行了\n        bottom: clientHeight - (bottom - uiData.y), // 当拖动边界的上边有距离时，只需加上那个距离就行了\n      });\n    }\n  };\n\n  const finalWidth = useMemo(() => {\n    if (width) return width;\n    return size === "large" ? 1220 : size === "small" ? 600 : 1080;\n  }, [width, size]);\n\n  return (\n    <Modal\n      maskClosable={false}\n      {...restPorps}\n      className={classnams({\n        [styles.baseModal]: true,\n        [className]: !!className,\n      })}\n      open={open}\n      width={finalWidth}\n      confirmLoading={confirmLoading}\n      onCancel={onCancel}\n      footer={null}\n      modalRender={(modal) => (\n        <Draggable\n          disabled={draggableDisabled}\n          bounds={bounds}\n          nodeRef={draggleRef}\n          onStart={onDragStart}\n        >\n          <div ref={draggleRef}>{modal}</div>\n        </Draggable>\n      )}\n    >\n      <div\n        className={styles.modalHeader}\n        onMouseEnter={() => {\n          if (draggableDisabled) {\n            setDraggableDisabled(false);\n          }\n        }}\n        onMouseLeave={() => {\n          setDraggableDisabled(true);\n        }}\n      >\n        <div className={styles.title}>{title}</div>\n      </div>\n      <div className={styles.modalContent}>{children}</div>\n      {footer !== null && (\n        <div className={styles.modalFooter}>\n          {footer || (\n            <>\n              <Button onClick={onCancel}>{cancelText}</Button>\n              {!disabled && onOk && (\n                <Button type=\'primary\' loading={okLoading} onClick={onOk}>\n                  {okText}\n                </Button>\n              )}\n            </>\n          )}\n        </div>\n      )}\n    </Modal>\n  );\n};\n\nexport default BaseModal;'},{fileName:"BaseModal.module.scss",code:"$fontSize: 14px;\n.baseModal {\n  $leftRightPadding: 10px;\n\n  :global {\n    .ant-modal-content {\n      padding: 0 !important;\n      overflow: hidden;\n      .ant-modal-close {\n        top: 6px;\n        right: $leftRightPadding;\n        width: 20px !important;\n        height: 20px !important;\n        svg {\n          width: 14px;\n          height: 14px;\n        }\n      }\n    }\n  }\n\n  $headerHeight: 34px;\n  $footerHeight: 36px;\n  $border: 1px solid rgb(229, 230, 235);\n  .modalHeader {\n    box-sizing: border-box;\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: $headerHeight;\n    padding: 0px $leftRightPadding;\n    border-bottom: $border;\n    cursor: move;\n\n    .title {\n      color: #000000d8;\n      font-size: $fontSize;\n      font-weight: 600;\n    }\n  }\n\n  .modalContent {\n    box-sizing: border-box;\n    font-size: $fontSize;\n    width: 100%;\n    min-height: 40px;\n    max-height: calc(86vh - $headerHeight - $footerHeight);\n    overflow-y: auto;\n    overflow-x: hidden;\n  }\n\n  .modalFooter {\n    box-sizing: border-box;\n    width: 100%;\n    height: $footerHeight;\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    padding: 0px $leftRightPadding;\n    border-top: $border;\n\n    button {\n      height: 26px;\n      display: inline-flex;\n      align-items: center;\n      font-size: $fontSize;\n      &:not(:last-child) {\n        margin-right: 12px;\n      }\n    }\n  }\n}"}]),v=()=>(0,h.jsx)(a.A,{title:"可进行拖拽的公共弹框组件",codeParams:C,children:(0,h.jsx)(y,{})}),X="others_container__kmaRU",B="others_sample__nGPQf",k=[(0,h.jsx)(v,{})],j=()=>(0,h.jsx)("div",{className:X,children:k.map(((n,e)=>(0,h.jsx)("div",{className:B,children:n},e)))})}}]);