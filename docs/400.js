"use strict";(self.webpackChunkcomposite_component_library=self.webpackChunkcomposite_component_library||[]).push([[400],{92400:(n,e,o)=>{o.r(e),o.d(e,{default:()=>z});var t=o(96540),r=o(17186),i=o(89467),a=o(81935),s=o(25202),l=o(27444),d=o(36492),m=o(49237),c=o(74353),u=o.n(c),p=o(92989),g=o(10401),b=o(45059),f=o(35709),x=o(91475),h=o(46942),v=o.n(h);const F="DraggableFormListContext_draggableRow__nIx6b",y="DraggableFormListContext_defaultBtn__JLXQk",R="DraggableFormListContext_disabled__tQWcQ",L="DraggableFormListContext_removeBtn__+PPAc";var D=o(74848);const w=n=>{const{quote:e,index:o,children:t,remove:r,onToTop:i,disabled:a=!1}=n;return(0,D.jsx)(g.sx,{draggableId:e.key.toString(),index:o,children:n=>(0,D.jsx)("div",{ref:n.innerRef,...n.draggableProps,children:(0,D.jsxs)("div",{className:F,children:[(0,D.jsx)("div",{...a?{}:n.dragHandleProps,className:v()({[y]:!0,[R]:a}),style:{marginRight:"8px"},children:(0,D.jsx)(b.A,{})}),t,r&&(0,D.jsx)("div",{className:v()({[L]:!0,[R]:a}),style:{marginLeft:"10px"},onClick:()=>{a||r(o)},children:(0,D.jsx)(f.A,{})}),i&&(0,D.jsx)("div",{className:v()({[y]:!0,[R]:a}),style:{marginLeft:"10px"},onClick:()=>{0!==o&&(a||i(o))},children:(0,D.jsx)(x.A,{})})]})})})},A=n=>{const{droppableId:e="",fields:o,move:r,children:i,remove:a,showToTop:s=!1,disabled:l}=n,d=(0,p.A)(l),m=(0,t.useCallback)((n=>{r(n,0)}),[]);return(0,D.jsx)(g.JY,{onDragEnd:n=>{const{source:e,destination:o}=n;if(e&&o&&e.droppableId==o.droppableId&&e.index!==o.index){const n=e.index,t=o.index;r(n,t)}},children:(0,D.jsx)(g.gL,{droppableId:e,children:n=>(0,D.jsx)("div",{ref:n.innerRef,...n.droppableProps,children:o.map(((n,e)=>{const{key:o,...t}=n;return(0,D.jsx)(w,{quote:n,index:e,remove:a,onToTop:s?m:null,disabled:d,children:i(t,e)},o)}))})})})},I=[{fileName:"DraggableFormListContext.tsx",code:'/**\n * 可上下拖拽排序的Form.List的包装组件\n */\nimport React, { useCallback, ReactNode } from "react";\nimport useFormDisabled from "hooks/useFormDisabled";\nimport { DragDropContext, Droppable, DropResult } from "react-beautiful-dnd";\nimport type { DroppableProvided } from "react-beautiful-dnd";\nimport DraggableFormListRow from "./DraggableFormListRow";\n\ntype DraggableFormListContextProps = {\n  droppableId: string;\n  fields: Record<string, any>[];\n  move: (from: number, to: number) => void;\n  children: (quote: Record<string, any>, index?: number) => ReactNode;\n  remove?: (index: number | number[]) => void;\n  showToTop?: boolean; // 是否显示置顶按钮\n  disabled?: boolean;\n};\n\nconst DraggableFormListContext = (props: DraggableFormListContextProps) => {\n  const {\n    droppableId = "",\n    fields,\n    move,\n    children,\n    remove,\n    showToTop = false,\n    disabled: selfDisabled,\n  } = props;\n  const disabled = useFormDisabled(selfDisabled);\n\n  const handleDragEnd = (result: DropResult) => {\n    const { source, destination } = result;\n    if (\n      source &&\n      destination &&\n      source.droppableId == destination.droppableId &&\n      source.index !== destination.index\n    ) {\n      const from = source.index;\n      const to = destination.index;\n      move(from, to);\n    }\n  };\n\n  const handleToTop = useCallback((index: number) => {\n    move(index, 0);\n  }, []);\n\n  return (\n    <DragDropContext onDragEnd={handleDragEnd}>\n      <Droppable droppableId={droppableId}>\n        {(provided: DroppableProvided) => (\n          <div ref={provided.innerRef} {...provided.droppableProps}>\n            {fields.map((quote: any, index: number) => {\n              const { key, ...restQuoteProps } = quote;\n              return (\n                <DraggableFormListRow\n                  quote={quote}\n                  index={index}\n                  remove={remove}\n                  onToTop={showToTop ? handleToTop : null}\n                  disabled={disabled}\n                  key={key}\n                >\n                  {children(restQuoteProps, index)}\n                </DraggableFormListRow>\n              );\n            })}\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n\nexport default DraggableFormListContext;'},{fileName:"DraggableFormListRow.tsx",code:'/**\n * 可增加和删除多条数据的包装组件\n */\nimport React, { ReactNode } from "react";\nimport { Draggable } from "react-beautiful-dnd";\nimport type { DraggableProvided } from "react-beautiful-dnd";\nimport {\n  HolderOutlined,\n  VerticalAlignTopOutlined,\n  MinusCircleOutlined,\n} from "@ant-design/icons";\nimport classnams from "classnames";\nimport styles from "./index.module.scss";\n\ntype DraggableFormListRowProps = {\n  quote: Record<string, any>;\n  index: number;\n  children: ReactNode;\n  remove?: ((index: number) => void) | null;\n  onToTop?: ((index: number) => void) | null;\n  disabled?: boolean;\n};\n\nconst DraggableFormListRow = (props: DraggableFormListRowProps) => {\n  const { quote, index, children, remove, onToTop, disabled = false } = props;\n\n  return (\n    <Draggable draggableId={quote.key.toString()} index={index}>\n      {(provided: DraggableProvided) => (\n        <div ref={provided.innerRef} {...provided.draggableProps}>\n          <div className={styles.draggableRow}>\n            <div\n              {...(!disabled ? provided.dragHandleProps : {})}\n              className={classnams({\n                [styles.defaultBtn]: true,\n                [styles.disabled]: disabled,\n              })}\n              style={{ marginRight: "8px" }}\n            >\n              <HolderOutlined />\n            </div>\n            {children}\n            {remove && (\n              <div\n                className={classnams({\n                  [styles.removeBtn]: true,\n                  [styles.disabled]: disabled,\n                })}\n                style={{ marginLeft: "10px" }}\n                onClick={() => {\n                  if (disabled) return;\n                  remove(index);\n                }}\n              >\n                <MinusCircleOutlined />\n              </div>\n            )}\n            {onToTop && (\n              <div\n                className={classnams({\n                  [styles.defaultBtn]: true,\n                  [styles.disabled]: disabled,\n                })}\n                style={{ marginLeft: "10px" }}\n                onClick={() => {\n                  if (index === 0) return;\n                  if (disabled) return;\n                  onToTop(index);\n                }}\n              >\n                <VerticalAlignTopOutlined />\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </Draggable>\n  );\n};\n\nexport default DraggableFormListRow;'},{fileName:"DraggableFormListContext.module.scss",code:".draggableRow {\n  display: flex;\n  align-items: center;\n  padding: 8px 0;\n\n  $btnSize: 16px;\n  .defaultBtn:not(.disabled) {\n    cursor: pointer;\n    :global {\n      svg {\n        width: $btnSize;\n        height: $btnSize;\n        path {\n          fill: $globalPrimaryColor;\n        }\n      }\n    }\n  }\n\n  .removeBtn:not(.disabled) {\n    cursor: pointer;\n    :global {\n      svg {\n        width: $btnSize;\n        height: $btnSize;\n        path {\n          fill: $globalRedColor;\n        }\n      }\n    }\n  }\n\n  .disabled {\n    cursor: not-allowed !important;\n    :global {\n      svg {\n        width: $btnSize;\n        height: $btnSize;\n        path {\n          fill: $disabledColor;\n        }\n      }\n    }\n  }\n}"}],j=(n,e)=>{const[o,r]=(0,t.useState)(0);return(0,t.useEffect)((()=>{if(n.current){const{clientHeight:e}=n.current;r(e)}}),[]),{droppableHeight:o,setDroppableHeight:r,onAdd:n=>{r((n=>n+e)),n?.()},onRemove:(n,o)=>{r((n=>Math.max(n-e,0))),n?.(o)}}};var C=o(33815),k=o(65754);const _="DraggableFormListSample_container__x0PmK",T="DraggableFormListSample_itemTitleRow__W0a+q",q="DraggableFormListSample_formListRow__v94NW",E=()=>{const[n]=i.A.useForm(),e=(0,t.useRef)(null),{droppableHeight:o,onAdd:r,onRemove:c}=j(e,48),p=(0,t.useRef)(1);return(0,D.jsx)(i.A,{form:n,name:"draggableFormListSampleForm",labelAlign:"right",initialValues:{fieldList:[{id:"1",field1:"默认值",field2:"workingDay",field3:["默认值",!0],field4:[u()(),u()(),!1]}]},children:(0,D.jsx)(i.A.List,{name:"fieldList",children:(n,t)=>{let{add:u,move:g,remove:b}=t;return(0,D.jsxs)(D.Fragment,{children:[(0,D.jsx)("div",{className:T,children:(0,D.jsx)(s.Ay,{type:"primary",icon:(0,D.jsx)(m.A,{}),ghost:!0,onClick:()=>(n=>{p.current>=5?a.Ay.warning("最多可增加5条数据"):(r(n),p.current=p.current+1)})(u),children:"新增"})}),(0,D.jsx)("div",{style:{width:"100%",height:o>0?`${o}px`:"auto"},ref:e,children:(0,D.jsx)(A,{droppableId:"fieldList",fields:n,showToTop:!0,move:g,remove:n=>((n,e)=>{p.current<=1?a.Ay.warning("最少要有1条数据"):(c(n,e),p.current=p.current-1)})(b,n),children:n=>(0,D.jsxs)("div",{className:q,children:[(0,D.jsx)(i.A.Item,{...n,name:[n.name,"id"],hidden:!0}),(0,D.jsx)(i.A.Item,{...n,label:"字段1",name:[n.name,"field1"],children:(0,D.jsx)(l.A,{})}),(0,D.jsx)(i.A.Item,{...n,label:"字段2",name:[n.name,"field2"],children:(0,D.jsx)(d.A,{options:[{label:"工作日",value:"workingDay"},{label:"自然日",value:"naturalDay"}],style:{width:"200px"}})}),(0,D.jsx)(i.A.Item,{...n,label:"字段3",name:[n.name,"field3"],children:(0,D.jsx)(C.A,{})}),(0,D.jsx)(i.A.Item,{...n,label:"字段4",name:[n.name,"field4"],children:(0,D.jsx)(k.A,{})})]})})})]})}})})},S=[{fileName:"index.tsx",code:'import React, { useRef } from "react";\nimport { Button, Form, Input, message, Select } from "antd";\nimport { PlusOutlined } from "@ant-design/icons";\nimport dayjs from "dayjs";\nimport DraggableFormListContext from "@/components/formLists/DraggableFormListContext";\nimport useFixHeight from "@/components/formLists/DraggableFormListContext/hooks/useFixHeight";\nimport InputAndCheckbox from "@/components/formItems/InputAndCheckbox";\nimport RangePickerAndCheckbox from "@/components/formItems/RangePickerAndCheckbox";\nimport styles from "./index.module.scss";\n\nconst DRAGGABLE_HEIGHT = 48;\n\nconst Content = () => {\n  const [form] = Form.useForm();\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { droppableHeight, onAdd, onRemove } = useFixHeight(\n    containerRef,\n    DRAGGABLE_HEIGHT\n  );\n  const rows = useRef<number>(1);\n\n  const onAddClick = (add: any) => {\n    if (rows.current >= 5) {\n      message.warning("最多可增加5条数据");\n      return;\n    }\n    onAdd(add);\n    rows.current = rows.current + 1;\n  };\n\n  const onRemoveClick = (remove: any, index: number) => {\n    if (rows.current <= 1) {\n      message.warning("最少要有1条数据");\n      return;\n    }\n    onRemove(remove, index);\n    rows.current = rows.current - 1;\n  };\n\n  return (\n      <Form\n        form={form}\n        name=\'draggableFormListSampleForm\'\n        labelAlign=\'right\'\n        initialValues={{\n          fieldList: [\n            {\n              id: "1",\n              field1: "默认值",\n              field2: "workingDay",\n              field3: ["默认值", true],\n              field4: [dayjs(), dayjs(), false],\n            },\n          ],\n        }}\n      >\n        <Form.List name=\'fieldList\'>\n          {(fields, { add, move, remove }) => (\n            <>\n              <div className={styles.itemTitleRow}>\n                <Button\n                  type=\'primary\'\n                  icon={<PlusOutlined />}\n                  ghost\n                  onClick={() => onAddClick(add)}\n                >\n                  新增\n                </Button>\n              </div>\n              <div\n                style={{\n                  width: "100%",\n                  height: droppableHeight > 0 ? `${droppableHeight}px` : "auto",\n                }}\n                ref={containerRef}\n              >\n                <DraggableFormListContext\n                  droppableId=\'fieldList\'\n                  fields={fields}\n                  showToTop\n                  move={move}\n                  remove={(index) => onRemoveClick(remove, index as number)}\n                >\n                  {(quote) => (\n                    <div className={styles.formListRow}>\n                      <Form.Item\n                        {...quote}\n                        name={[quote.name, "id"]}\n                        hidden\n                      ></Form.Item>\n                      <Form.Item\n                        {...quote}\n                        label=\'字段1\'\n                        name={[quote.name, "field1"]}\n                      >\n                        <Input />\n                      </Form.Item>\n                      <Form.Item\n                        {...quote}\n                        label=\'字段2\'\n                        name={[quote.name, "field2"]}\n                      >\n                        <Select\n                          options={[\n                            { label: "工作日", value: "workingDay" },\n                            { label: "自然日", value: "naturalDay" },\n                          ]}\n                          style={{ width: "200px" }}\n                        />\n                      </Form.Item>\n                      <Form.Item\n                        {...quote}\n                        label=\'字段3\'\n                        name={[quote.name, "field3"]}\n                      >\n                        <InputAndCheckbox />\n                      </Form.Item>\n                      <Form.Item\n                        {...quote}\n                        label=\'字段4\'\n                        name={[quote.name, "field4"]}\n                      >\n                        <RangePickerAndCheckbox />\n                      </Form.Item>\n                    </div>\n                  )}\n                </DraggableFormListContext>\n              </div>\n            </>\n          )}\n        </Form.List>\n      </Form>\n  );\n};\n\nexport default Content;\n'}].concat(I),H=()=>(0,D.jsx)(r.A,{className:_,title:"可上下拖拽排序的Form.List的包装组件",codeParams:S,children:(0,D.jsx)(E,{})});var P=o(19270);const N="DraggableWithValidateFormListSample_container__6VHhw",M="DraggableWithValidateFormListSample_itemTitleRow__KkWRb",V="DraggableWithValidateFormListSample_formListRow__1BmxV",B=[{required:!0,message:"必填项"}],W=()=>{const[n]=i.A.useForm(),e=(0,t.useRef)(null),{droppableHeight:o,onAdd:r,onRemove:c}=j(e,48),u=(0,t.useRef)(1);return(0,D.jsxs)(i.A,{form:n,name:"draggableWithValidateFormListSampleForm",labelAlign:"right",initialValues:{fieldList:[{}]},children:[(0,D.jsx)(i.A.List,{name:"fieldList",children:(t,p)=>{let{add:g,move:b,remove:f}=p;return(0,D.jsxs)(D.Fragment,{children:[(0,D.jsx)("div",{className:M,children:(0,D.jsx)(s.Ay,{type:"primary",icon:(0,D.jsx)(m.A,{}),ghost:!0,onClick:()=>(n=>{u.current>=5?a.Ay.warning("最多可增加5条数据"):(r(n),u.current=u.current+1)})(g),children:"新增"})}),(0,D.jsx)("div",{style:{width:"100%",height:o>0?`${o}px`:"auto"},ref:e,children:(0,D.jsx)(A,{droppableId:"fieldList",fields:t,showToTop:!0,move:b,remove:n=>((n,e)=>{u.current<=1?a.Ay.warning("最少要有1条数据"):(c(n,e),u.current=u.current-1)})(f,n),children:e=>(0,D.jsxs)("div",{className:V,children:[(0,D.jsx)(i.A.Item,{...e,name:[e.name,"id"],hidden:!0}),(0,D.jsx)(i.A.Item,{...e,label:"字段1",name:[e.name,"field1"],rules:B,children:(0,D.jsx)(P.A,{form:n,style:{width:"214px"},children:(0,D.jsx)(l.A,{})})}),(0,D.jsx)(i.A.Item,{...e,label:"字段2",name:[e.name,"field2"],rules:B,children:(0,D.jsx)(P.A,{form:n,style:{width:"214px"},children:(0,D.jsx)(d.A,{options:[{label:"工作日",value:"workingDay"},{label:"自然日",value:"naturalDay"}],style:{width:"200px"}})})}),(0,D.jsx)(i.A.Item,{...e,label:"字段3",name:[e.name,"field3"],rules:B,children:(0,D.jsx)(P.A,{form:n,style:{width:"214px"},children:(0,D.jsx)(C.A,{})})}),(0,D.jsx)(i.A.Item,{...e,label:"字段4",name:[e.name,"field4"],rules:B,children:(0,D.jsx)(P.A,{form:n,style:{width:"294px"},children:(0,D.jsx)(k.A,{})})})]})})})]})}}),(0,D.jsx)("div",{style:{display:"flex",justifyContent:"flex-end"},children:(0,D.jsx)(s.Ay,{type:"primary",onClick:async()=>{try{const e=await(n?.validateFields());console.log("values:",e)}catch(n){}},children:"提交"})})]})},O=[{fileName:"index.tsx",code:'import React, { useRef } from "react";\nimport { Button, Form, Input, message, Select } from "antd";\nimport { PlusOutlined } from "@ant-design/icons";\nimport DraggableFormListContext from "@/components/formLists/DraggableFormListContext";\nimport useFixHeight from "@/components/formLists/DraggableFormListContext/hooks/useFixHeight";\nimport WithValidateMessage from "@/components/formItems/WithValidateMessage";\nimport InputAndCheckbox from "@/components/formItems/InputAndCheckbox";\nimport RangePickerAndCheckbox from "@/components/formItems/RangePickerAndCheckbox";\nimport styles from "./index.module.scss";\n\nconst DRAGGABLE_HEIGHT = 48;\nconst REQUIRED_FORM_ITEM_RULES = [{ required: true, message: "必填项" }];\n\nconst Content = () => {\n  const [form] = Form.useForm();\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { droppableHeight, onAdd, onRemove } = useFixHeight(\n    containerRef,\n    DRAGGABLE_HEIGHT\n  );\n  const rows = useRef<number>(1);\n\n  const onAddClick = (add: any) => {\n    if (rows.current >= 5) {\n      message.warning("最多可增加5条数据");\n      return;\n    }\n    onAdd(add);\n    rows.current = rows.current + 1;\n  };\n\n  const onRemoveClick = (remove: any, index: number) => {\n    if (rows.current <= 1) {\n      message.warning("最少要有1条数据");\n      return;\n    }\n    onRemove(remove, index);\n    rows.current = rows.current - 1;\n  };\n\n  // 点击提交\n  const onSubmit = async () => {\n    try {\n      const values = await form?.validateFields();\n      console.log("values:", values);\n    } catch (err) {}\n  };\n\n  return (\n    <Form\n      form={form}\n      name=\'draggableWithValidateFormListSampleForm\'\n      labelAlign=\'right\'\n      initialValues={{\n        fieldList: [{}],\n      }}\n    >\n      <Form.List name=\'fieldList\'>\n        {(fields, { add, move, remove }) => (\n          <>\n            <div className={styles.itemTitleRow}>\n              <Button\n                type=\'primary\'\n                icon={<PlusOutlined />}\n                ghost\n                onClick={() => onAddClick(add)}\n              >\n                新增\n              </Button>\n            </div>\n            <div\n              style={{\n                width: "100%",\n                height: droppableHeight > 0 ? `${droppableHeight}px` : "auto",\n              }}\n              ref={containerRef}\n            >\n              <DraggableFormListContext\n                droppableId=\'fieldList\'\n                fields={fields}\n                showToTop\n                move={move}\n                remove={(index) => onRemoveClick(remove, index as number)}\n              >\n                {(quote) => (\n                  <div className={styles.formListRow}>\n                    <Form.Item\n                      {...quote}\n                      name={[quote.name, "id"]}\n                      hidden\n                    ></Form.Item>\n                    <Form.Item\n                      {...quote}\n                      label=\'字段1\'\n                      name={[quote.name, "field1"]}\n                      rules={REQUIRED_FORM_ITEM_RULES}\n                    >\n                      <WithValidateMessage\n                        form={form}\n                        style={{ width: "214px" }}\n                      >\n                        <Input />\n                      </WithValidateMessage>\n                    </Form.Item>\n                    <Form.Item\n                      {...quote}\n                      label=\'字段2\'\n                      name={[quote.name, "field2"]}\n                      rules={REQUIRED_FORM_ITEM_RULES}\n                    >\n                      <WithValidateMessage\n                        form={form}\n                        style={{ width: "214px" }}\n                      >\n                        <Select\n                          options={[\n                            { label: "工作日", value: "workingDay" },\n                            { label: "自然日", value: "naturalDay" },\n                          ]}\n                          style={{ width: "200px" }}\n                        />\n                      </WithValidateMessage>\n                    </Form.Item>\n                    <Form.Item\n                      {...quote}\n                      label=\'字段3\'\n                      name={[quote.name, "field3"]}\n                      rules={REQUIRED_FORM_ITEM_RULES}\n                    >\n                      <WithValidateMessage\n                        form={form}\n                        style={{ width: "214px" }}\n                      >\n                        <InputAndCheckbox />\n                      </WithValidateMessage>\n                    </Form.Item>\n                    <Form.Item\n                      {...quote}\n                      label=\'字段4\'\n                      name={[quote.name, "field4"]}\n                      rules={REQUIRED_FORM_ITEM_RULES}\n                    >\n                      <WithValidateMessage\n                        form={form}\n                        style={{ width: "294px" }}\n                      >\n                        <RangePickerAndCheckbox />\n                      </WithValidateMessage>\n                    </Form.Item>\n                  </div>\n                )}\n              </DraggableFormListContext>\n            </div>\n          </>\n        )}\n      </Form.List>\n      <div\n        style={{\n          display: "flex",\n          justifyContent: "flex-end",\n        }}\n      >\n        <Button type=\'primary\' onClick={onSubmit}>\n          提交\n        </Button>\n      </div>\n    </Form>\n  );\n};\n\nexport default Content;\n'}].concat(I,P.w),$=()=>(0,D.jsx)(r.A,{className:N,title:"可上下拖拽排序且显示自定义校验信息的Form.List",codeParams:O,children:(0,D.jsx)(W,{})}),G="FormListSection_container__9--VJ",Q="FormListSection_sample__M7-lo",U=[(0,D.jsx)(H,{}),(0,D.jsx)($,{})],z=()=>(0,D.jsx)("div",{className:G,children:U.map(((n,e)=>(0,D.jsx)("div",{className:Q,children:n},e)))})}}]);