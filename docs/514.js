"use strict";(self.webpackChunkcomposite_component_library=self.webpackChunkcomposite_component_library||[]).push([[514],{19270:(e,n,t)=>{t.d(n,{A:()=>h,w:()=>p});var a=t(96540),s=t(61878),i=t(52629),r=t(46942),l=t.n(r);const o="WithValidateMessage_container__w-KWx",d="WithValidateMessage_componentBox__FXDFV",m="WithValidateMessage_messageBox__Mc3qF";var c=t(74848);const h=e=>{const{form:n,nevervalidate:t=!1,id:r="","aria-invalid":h,children:p,className:g,style:v={},...u}=e,f=(0,a.useMemo)((()=>{let e="";if(!t&&n&&r&&"true"===h){const t=r.split("_");let a=[];a=t.length>=3?n.getFieldError([t[0],Number(t[1]),t[2]]):n.getFieldError(t[0]),e=a[0]}return e}),[n,t,r,h]);return(0,c.jsxs)("div",{className:l()({[o]:!0,[g||""]:!!g}),style:v,children:[(0,c.jsx)("div",{className:d,style:{width:t?"100%":"calc(100% - 28px)"},children:p?a.cloneElement(p,{...u,"aria-invalid":h,id:r}):null}),!t&&!!f&&(0,c.jsx)("div",{className:m,children:(0,c.jsx)(s.A,{title:f,children:(0,c.jsx)(i.A,{})})})]})},p=[{fileName:"WithValidateMessage.tsx",code:'/**\n * 用于显示自定义校验信息的FormItem组件的包装组件(注意：如果子组件需要传onChange属性，则必须由该包装组件进行传递，不能写在子组件里；要在外层组件中将.ant-form-item-explain类样式的display属性覆盖为none)\n */\nimport React, { useMemo, ReactElement } from "react";\nimport { Tooltip, type FormInstance } from "antd";\nimport { ExclamationCircleOutlined } from "@ant-design/icons";\nimport classnams from "classnames";\nimport styles from "./index.module.scss";\n\ntype WithValidateMessageProps = {\n  form?: FormInstance | null; // form对象，nevervalidate为true时可以不传\n  nevervalidate?: boolean; // 是否绝对不会进行校验，该值为true时，组件后面不会有校验信息的图标，也不会占用空间\n  id?: string; // Form.Item组件自动传入\n  "aria-invalid"?: string; // Form校验时会自动传入"true"\n  children?: ReactElement | null; // children必须是支持value和onChange属性的组件\n  className?: string;\n  style?: Record<string, any>;\n} & { [key in string]: any };\n\nconst WithValidateMessage = (props: WithValidateMessageProps) => {\n  const {\n    form,\n    nevervalidate = false,\n    id = "",\n    ["aria-invalid"]: invalid,\n    children,\n    className,\n    style = {},\n    ...restProps\n  } = props;\n\n  // 获取校验信息\n  const errorMessage = useMemo(() => {\n    let str = "";\n    if (!nevervalidate && form && id && invalid === "true") {\n      const namePath = id.split("_");\n      let errorList = [];\n      // 兼容Form.List\n      if (namePath.length >= 3) {\n        errorList = form.getFieldError([\n          namePath[0],\n          Number(namePath[1]),\n          namePath[2],\n        ]);\n      } else {\n        errorList = form.getFieldError(namePath[0]);\n      }\n      str = errorList[0];\n    }\n    return str;\n  }, [form, nevervalidate, id, invalid]);\n\n  return (\n    <div\n      className={classnams({\n        [styles.container]: true,\n        [className || ""]: !!className,\n      })}\n      style={style}\n    >\n      <div\n        className={styles.componentBox}\n        style={{ width: nevervalidate ? "100%" : "calc(100% - 28px)" }}\n      >\n        {children\n          ? React.cloneElement(children, {\n              ...restProps,\n              "aria-invalid": invalid,\n              id,\n            })\n          : null}\n      </div>\n      {!nevervalidate && !!errorMessage && (\n        <div className={styles.messageBox}>\n          <Tooltip title={errorMessage}>\n            <ExclamationCircleOutlined />\n          </Tooltip>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default WithValidateMessage;'},{fileName:"WithValidateMessage.module.scss",code:".container {\n  width: 100%;\n  display: flex;\n  $messageWidth: 26px;\n  .componentBox {\n    display: flex;\n    align-items: center;\n  }\n  .messageBox {\n    width: $messageWidth;\n    height: $messageWidth;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-top: 3px;\n    margin-left: 2px;\n    svg {\n      width: 18px;\n      height: 18px;\n      path {\n        fill: $globalRedColor;\n      }\n    }\n  }\n}"}]},92989:(e,n,t)=>{t.d(n,{A:()=>i});var a=t(96540),s=t(98119);const i=e=>{const n=(0,a.useContext)(s.A);return(0,a.useMemo)((()=>null!=e?!!e:!!n),[e,n])}}}]);